// =============================================
// MIXINS
// =============================================

// Media Queries
@mixin breakpoint($size) {
  @if $size == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $size == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $size == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $size == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  } @else if $size == 2xl {
    @media (min-width: $breakpoint-2xl) {
      @content;
    }
  }
}

// Container
@mixin container {
  width: 100%;
  max-width: $container-max-width;
  margin: 0 auto;
  padding: 0 $container-padding;

  @include breakpoint(md) {
    padding: 0 $spacing-6;
  }

  @include breakpoint(lg) {
    padding: 0 $spacing-8;
  }
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Grid utilities
@mixin grid-responsive($columns: 1, $gap: $spacing-6) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;

  @include breakpoint(md) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include breakpoint(lg) {
    grid-template-columns: repeat(3, 1fr);
  }
}

// Button base
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $spacing-2;
  padding: $spacing-3 $spacing-6;
  font-weight: $font-weight-medium;
  font-size: $font-size-base;
  line-height: $line-height-tight;
  border-radius: $border-radius;
  transition: all $transition-normal;
  cursor: pointer;
  border: none;
  text-decoration: none;
  white-space: nowrap;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Button variants
@mixin button-primary {
  @include button-base;
  background-color: $primary;
  color: white;

  &:hover:not(:disabled) {
    background-color: $primary-dark;
    transform: translateY(-1px);
    box-shadow: $shadow-md;
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  color: $primary;
  border: 2px solid $primary;

  &:hover:not(:disabled) {
    background-color: $primary;
    color: white;
    transform: translateY(-1px);
    box-shadow: $shadow-md;
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

// Card
@mixin card {
  background-color: $bg-secondary;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-sm;
  border: 1px solid $border-color;
  transition: all $transition-normal;

  &:hover {
    box-shadow: $shadow-md;
    transform: translateY(-2px);
  }
}

// Text truncate
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Aspect ratio
@mixin aspect-ratio($width, $height) {
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    display: block;
    padding-top: percentage($height / $width);
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

// Visually hidden
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Animation
@mixin fade-in($duration: $transition-normal) {
  opacity: 0;
  animation: fadeIn $duration ease-in-out forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

// Gradient text
@mixin gradient-text($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
} 